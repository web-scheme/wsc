use-modules (scheme base)

add-to-load-path (dirname (current-filename))  ; Load relative modules.
use-modules
  (parse env) #:select (make-env)
  (parse macros) #:select (expand-macros)
  (parse reading) #:select (read-all-wrapped)

;;* The global lexical environment that is the ancestor of all environments.
define root-bindings make-env('())

;;* Compile Scheme code into a Wasm module.
;;*
;;* Parameters:
;;*   filename:  A human-readable name for `in-port`,
;;*              or null if reading from standard input.
;;*   in-port:   Textual input port to read Scheme code from.
;;*   out-port:  Output port to write the Wasm module to,
;;*              written in text format if the port is textual, otherwise binary.
define compile!(filename in-port out-port)
  newline()
  write(map(expand-macros
            read-all-wrapped(in-port)))
  newline()

;; Good enough for now.
define in-port open-input-file("../test/integration/basic/input.scm")
compile!('() in-port current-output-port())
close-port(in-port)
