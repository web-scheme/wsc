;;* Compiler implementation for function and variable definitions.
(define-module (compile define)
  #:export (compile-define wasm-global:new)
  #:use-module (scheme base)
  #:use-module ((compile) #:select (add-global))
  #:use-module ((syntax wrap) #:select (switch-s-expr
                                        wrapped-syntax.datum))
  #:use-module ((tools) #:select (Î»))
  #:use-module ((tools logging) #:select (log-error))
)

;* A global variable in a Wasm module.
define-record-type wasm-global
  wasm-global:new(name init)
  wasm-global
  ;* [Name](symbol) of the global variable as written in the Scheme code.
  name wasm-global.name
  ;* Initial [value](TODO) of the global variable.
  init wasm-global.init

define compile-define-variable(wrapped-head head body module)
  add-global(
    module
    wasm-global:new(head 'TODO))

define compile-define-function(wrapped-head head body module)
  add-global(
    module
    wasm-global:new(head 'TODO))

define compile-define(head-and-body module)
  define wrapped-head car(head-and-body)
  define head wrapped-syntax.datum(wrapped-head)
  define body cdr(head-and-body)
  if symbol?(head)
    compile-define-variable(wrapped-head head body module)
    if pair?(head)
      compile-define-function(wrapped-head head body module)
      log-error("Invalid definition identifier" wrapped-head)
