;;* Compiler implementation for function and variable definitions.
(define-module (compile define)
  #:export (compile-define)
  #:use-module (scheme base)
  #:use-module ((compile module) #:select (add-globals))
  #:use-module ((parse wrap) #:select (switch-s-expr
                                       wrapped-syntax.datum))
  #:use-module ((tools) #:select (Î»))
  #:use-module ((tools logging) #:select (log-error))
)

define compile-define-variable(wrapped-head head body module)
  ;; TODO: Something real.
  add-globals(
    module
    `(global $*x (export "x") anyref (i32.const 5)))

define compile-define-function(wrapped-head head body module)
  ;; TODO: Something real.
  add-globals(
    module
    `(global $*foo (export "foo") anyref (ref.func 1)))

define compile-define(head-and-body module)
  define wrapped-head car(head-and-body)
  define head wrapped-syntax.datum(wrapped-head)
  define body cdr(head-and-body)
  if symbol?(head)
    compile-define-variable(wrapped-head head body module)
    if pair?(head)
      compile-define-function(wrapped-head head body module)
      log-error("Invalid definition identifier" wrapped-head)
