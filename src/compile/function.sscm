;;* Visitors for function implementations.
(define-module (compile function)
  #:export (compile-call compile-function)
  #:use-module (scheme base)
  #:use-module ((compile module) #:select (core-module))
  #:use-module ((tools) #:select (Î»))
  #:use-module ((tools logging) #:select (log-error))
)

;* Compile a function call into a function body.
define compile-call(syntax function)
  'TODO

;* Compile an anonymous Scheme function definition and add it to `module`.
;*
;* Parameters
;*   params-and-body: '[List] with a [wrapped](wrapped-syntax) parameter [list] as a head
;*                     and wrapped body instructions as a tail.'
;*
;* Result
;*   The new function's unique [ID](integer),
;*   or `#f` if the function fails to compile.
define compile-function(params-and-body module)
  'TODO
