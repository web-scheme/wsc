;;* Test runner: set up the environment and load each file.
use-modules (scheme base)

;; GUILE GLUE
;; Load relative modules.
add-to-load-path
  dirname(current-filename())
;; Also load main source modules (hacky):
;; assume that `(current-filename)` is `<build-root>/test/<random>/runner.scm`
;; and that the unsweetened source files are in `<build-root>/src/<random>/`
define src-build-dir
  string-append
    dirname(dirname(dirname(current-filename())))
    "/src"
define get-latest-subdir(parent)
  define next readdir(parent)
  if (or string=?(next ".")
         string=?(next ".."))
    get-latest-subdir(parent)
    next
define src-build-dir-stream opendir(src-build-dir)
define random get-latest-subdir(src-build-dir-stream)
closedir(src-build-dir-stream)
add-to-load-path
  string-append(src-build-dir "/" random)

use-modules ((tap) #:select (test-number))

;; TAP version header; always required.
display("TAP version 14\n")

;; Each individial test file should use the `(tap)` library
;; to print according to the TAP spec.
;; Skip the command name and first argument,
;; which, due to needing the generator, is the tap library.
for-each(load cddr(command-line()))

;; TAP plan footer; always required.
display("1..")
display(test-number)
newline()
